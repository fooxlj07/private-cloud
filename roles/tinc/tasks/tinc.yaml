---

- name: Install dependencies
  apt:
    pkg: 
      - "openssl"
      - "zlib1g"
      - "libncurses5-dev"
      - "libncursesw5-dev"
      - "libreadline-dev"
      - "libz-dev"
      - "liblzo2-dev"
      - "libssl-dev"
      - "tinc"

- name: Clean up 
  block:
  - name: Stop tinc service
    systemd:
      name: tinc
      state: stopped
      enabled: false

  - name: Remove tinc config     
    file: 
      path: "/etc/tinc/{{ vpn_name }}"
      state: absent
      force: true
    ignore_errors: true

  tags: clean_tinc

- name: Create tinc/{{ vpn_name }}/hosts folder
  file:
    path: /etc/tinc/{{ vpn_name }}/hosts
    state: directory
    mode: '0755'
  delegate_to: "{{ item }}"
  loop: "{{ groups['nodes'] }}"

- name: Add tinc config
  template:
    src: tinc/tinc.conf.j2
    dest: /etc/tinc/{{ vpn_name }}/tinc.conf

- name: Create tinc hosts folder
  file:
    path: /etc/tinc/{{ vpn_name }}/hosts
    state: directory
    mode: '0755'
  delegate_to: "{{ item }}"
  loop: "{{ groups['nodes'] }}"

- name: Add tinc host config
  template:
    src: tinc/host.cfg.j2
    dest: /etc/tinc/{{ vpn_name }}/hosts/{{ inventory_hostname }}

- name: Add ssh keys to tinc hosts
  command: tincd -n {{ vpn_name }} -K4096

- name: Add tinc-up script
  template:
    src: tinc/tinc-up.j2
    dest: /etc/tinc/{{ vpn_name }}/tinc-up
    mode: "0755"
  tags: tinc_up

- name: Add tinc-down script
  template:
    src: tinc/tinc-down.j2
    dest: /etc/tinc/{{ vpn_name }}/tinc-down
    mode: "0755"
  tags: tinc_down

- name: Wait until public key is added to hosts
  wait_for:
    path: /etc/tinc/{{ vpn_name }}/hosts/{{ inventory_hostname }}
    search_regex: "PUBLIC KEY"
    sleep: 5
    timeout: 600

- name: Fetch hosts config
  fetch:
    src: /etc/tinc/{{ vpn_name }}/hosts/{{ inventory_hostname }}
    dest: buffer/{{ inventory_hostname }}
    flat: true

- name: Copy host config from current host to other hosts
  copy:
    src: buffer/{{ inventory_hostname }}
    dest: /etc/tinc/{{ vpn_name }}/hosts/
  delegate_to: "{{ item }}"
  when: inventory_hostname != item
  loop: "{{ groups['nodes'] }}"
